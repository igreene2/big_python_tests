import struct
import numpy as np

def float_to_bin(num):
    return bin(struct.unpack('!I', struct.pack('!f', num))[0])[2:].zfill(32)

def bin_to_float(binary):
    return struct.unpack('!f',struct.pack('!I', int(binary, 2)))[0]



# c = float_to_bin(5.0173478690645454e-05)
# print(c)

# inte = int(c)
# print(inte)
# hexy = hex(inte)
# print(hexy)

# bin =  10111001110011110110101100010011

# integer = int(str(bin), 2)
# print(integer)
# hexa = hex(integer)
# print(hexa)

# print(bin_to_float(str(inte)))
test = 12
test2 = 12.0 

#print(float_to_bin(test))
#print(float_to_bin(test2))





test = 0x7f9e681779de9f67c8494b9a1b
#print(struct.unpack(">f",struct.pack(">i",int('7f9e6817',16)))[0])
alpha = [-0.0005442855115098322, -0.0002925725386828722, -0.0003349708219420652, -0.00029724495565871146, -0.00018712381267416972, -6.364659776900481e-05, -5.551247401219615e-05, -0.0005064495638724708, 0.0006085294717535473, 0.0002635154369417009, 0.001132579199221327, 0.0001685705622536581, 0.00010861160595108951]
tv = [0.0, 0.0, 5.0, 15.0, 12.0, 4.0, 0.0, 0.0, 0.0, 2.0, 15.0, 8.0, 11.0, 16.0, 4.0, 0.0, 0.0, 8.0, 9.0, 0.0, 6.0, 16.0, 4.0, 0.0, 0.0, 8.0, 8.0, 0.0, 2.0, 10.0, 8.0, 0.0, 0.0, 8.0, 7.0, 0.0, 0.0, 13.0, 5.0, 0.0, 0.0, 2.0, 14.0, 0.0, 0.0, 16.0, 2.0, 0.0, 0.0, 0.0, 14.0, 8.0, 11.0, 10.0, 0.0, 0.0, 0.0, 0.0, 4.0, 13.0, 14.0, 0.0, 0.0, 0.0]
        # {
        #     "_instr_No.": 58,
        #     "addr": "0x000005A4",
        #     "data": "0x00000000",
        #     "mode": "1"
        # },
        # {
        #     "_instr_No.": 60,
        #     "addr": "0x000005A8",
        #     "data": "0x0000034d",
        #     "mode": "1"
        # },
        # {
        #     "_instr_No.": 61,
        #     "addr": "0x000005AA",
        #     "data": "0xffffffff",
        #     "mode": "1"
        # },
        # {
        #     "_instr_No.": 62,
        #     "addr": "0x000005AC",
        #     "data": "0x00000000",
        #     "mode": "1"
        # },
        # {
        #     "_instr_No.": 63,
        #     "addr": "0x000005AE",
        #     "data": "0x00000000",
        #     "mode": "1"
        # },
        # {
        #     "_instr_No.": 64,
        #     "addr": "0x000005B0",
        #     "data": "0x00000040",
        #     "mode": "1"
        # },
        # {
        #     "_instr_No.": 65,
        #     "addr": "0x000005B2",
        #     "data": "0x0000000d",
        #     "mode": "1"
        # },
        # {
        #     "_instr_No.": 66,
        #     "addr": "0x000005B4",
        #     "data": "0x00000000",
        #     "mode": "1"
        # },
        # {
        #     "_instr_No.": 67,
        #     "addr": "0x000005B6",
        #     "data": "0x00000000",
        #     "mode": "1"
        # },
        # {
        #     "_instr_No.": 68,
        #     "addr": "0x000005B8",
        #     "data": "0x00000000",
        #     "mode": "1"
        # },
        # {
        #     "_instr_No.": 69,
        #     "addr": "0x000005A0",
        #     "data": "0x00000080",
        #     "mode": "1"
        # }

spv = [[ 0,  0,  1,  9, 15, 11,  0,  0,  0,  0, 11, 16,  8, 14,  6,  0,  0,  2,
  16, 10,  0,  9,  9,  0,  0,  1, 16,  4,  0,  8,  8,  0,  0,  4, 16,  4,
   0,  8,  8,  0,  0,  1, 16,  5,  1, 11,  3,  0,  0,  0, 12, 12, 10, 10,
   0,  0,  0,  0,  1, 10, 13,  3,  0,  0],
 [ 0,  0,  1, 12,  5,  0,  0,  0,  0,  0,  9, 16, 14,  3,  0,  0,  0,  2,
  16, 14, 11, 13,  0,  0,  0,  2, 16, 10,  0, 14,  4,  0,  0,  4, 16,  0,
   0, 12,  4,  0,  0,  4, 16,  3,  0, 11, 10,  0,  0,  0, 13, 12,  8, 14,
   6,  0,  0,  0,  3, 10, 16, 12,  1,  0],
 [ 0,  0,  0, 10, 15,  1,  0,  0,  0,  0,  5, 16, 16, 10,  0,  0,  0,  0,
  14,  6,  6, 15,  0,  0,  0,  4, 16,  4,  0, 15,  3,  0,  0,  5, 15,  5,
   0, 11,  5,  0,  0,  0, 12, 11,  0, 13,  5,  0,  0,  0,  8, 16, 16, 16,
   3,  0,  0,  0,  1,  8, 13,  8,  0,  0],
 [ 0,  0,  2, 12, 12,  2,  0,  0,  0,  0, 10, 16, 16,  9,  0,  0,  0,  3,
  16, 16,  8, 15,  3,  0,  0,  6, 16,  6,  0, 13,  8,  0,  0,  8, 16,  4,
   0, 15,  8,  0,  0,  5, 16,  8, 12, 16,  6,  0,  0,  0, 15, 16, 16, 15,
   2,  0,  0,  0,  3, 13, 12,  3,  0,  0],
 [ 0,  0,  4, 11, 15,  8,  0,  0,  0,  0, 13, 16, 11, 13,  7,  0,  0,  3,
  16, 12,  0,  4,  8,  0,  0,  6, 16,  5,  0,  4,  8,  0,  0,  7,  9,  0,
   0,  9,  7,  0,  0,  4, 10,  0,  2, 15,  2,  0,  0,  1, 16, 12, 14, 10,
   0,  0,  0,  0,  4, 14, 14,  1,  0,  0],
 [ 0,  0,  2, 12, 15, 12,  1,  0,  0,  1, 14, 14, 14, 11,  8,  0,  0,  5,
  16,  3,  0,  2,  8,  0,  0,  8, 14,  0,  0,  6,  8,  0,  0,  4, 12,  0,
   0,  9,  4,  0,  0,  1, 16,  1,  1, 14,  1,  0,  0,  0, 11,  9, 11,  8,
   0,  0,  0,  0,  2, 13, 14,  1,  0,  0],
 [ 0,  0,  9, 16, 15, 14,  1,  0,  0,  1, 15, 15,  5, 10,  7,  0,  0,  6,
  16,  1,  0,  1,  8,  0,  0,  8, 13,  0,  0,  4,  8,  0,  0,  7,  6,  0,
   0,  6,  6,  0,  0,  5,  9,  0,  0, 13,  1,  0,  0,  0, 16,  5, 12, 12,
   0,  0,  0,  0,  8, 15, 10,  1,  0,  0],
 [ 0,  0,  3, 14,  7,  0,  0,  0,  0,  0, 14, 16, 14,  9,  0,  0,  0,  4,
  16, 16, 11, 15,  3,  0,  0,  5, 15,  6,  0,  4,  8,  0,  0,  8,  8,  0,
   0,  4,  8,  0,  0,  5, 11,  0,  0,  6,  6,  0,  0,  0, 13, 10,  5, 15,
   5,  0,  0,  0,  2, 12, 14,  8,  0,  0],
 [ 0,  0,  0,  0,  5, 15,  8,  0,  0,  0,  0,  2, 15, 16,  9,  0,  0,  0,
   3, 15, 16, 16, 10,  0,  0,  7, 16, 10,  8, 16,  7,  0,  0,  0,  1,  0,
   8, 16,  4,  0,  0,  0,  0,  0, 11, 16,  1,  0,  0,  0,  0,  0,  9, 16,
   1,  0,  0,  0,  0,  0,  8, 14,  0,  0],
 [ 0,  0,  0,  0, 12, 11,  1,  0,  0,  0,  0,  1, 16, 16,  7,  0,  0,  0,
   1, 14, 16, 16,  7,  0,  0,  1, 14, 16, 14, 16,  8,  0,  0,  5, 12,  3,
   8, 16,  7,  0,  0,  0,  0,  0,  8, 16,  4,  0,  0,  0,  0,  0,  8, 16,
   1,  0,  0,  0,  0,  0, 11, 12,  0,  0],
 [ 0,  0,  8, 16, 15,  8,  0,  0,  0,  1, 16, 16, 16,  2,  0,  0,  0,  2,
  16, 16, 10,  0,  0,  0,  0,  2, 16, 16, 12,  0,  0,  0,  0,  6, 16, 16,
  13,  0,  0,  0,  0,  1, 16, 16, 11,  0,  0,  0,  0,  0, 16, 16, 10,  0,
   0,  0,  0,  0,  7, 15, 15,  0,  0,  0],
 [ 0,  0,  0,  0, 13, 16,  6,  0,  0,  0,  3, 11, 16, 16,  5,  0,  0,  5,
  16, 16, 16, 16,  4,  0,  0,  4, 10,  9, 16, 16,  4,  0,  0,  0,  0,  0,
  13, 16,  4,  0,  0,  0,  0,  0, 12, 16,  4,  0,  0,  0,  0,  2, 16, 16,
   7,  0,  0,  0,  0,  1, 12, 14,  5,  0,],
 [ 0,  0,  6, 13,  0,  0,  0,  0,  0,  0,  8, 16,  2,  0,  0,  0,  0,  0,
   6, 16,  3,  0,  0,  0,  0,  0,  3, 15,  6,  0,  0,  0,  0,  0,  0, 10,
  10,  0,  0,  0,  0,  0,  0,  3, 15,  0,  0,  0,  0,  0,  7, 10, 14, 12,
   5,  1,  0,  0,  6, 16, 16, 16, 16, 12]]

count = 0
sum = 0
for x in spv:
    out = np.dot(x, tv)
    alf = out*alpha[count]
    sum = sum + alf
    count =  count + 1

print(sum)

   
